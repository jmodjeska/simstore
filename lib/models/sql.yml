sales_list: >
  SELECT t.date, t.product_id, p.title, p.author, t.price,
  e.name AS "employee_name", t.result
  FROM transactions t
  JOIN products p ON p.id = t.product_id
  JOIN employees e ON e.id = t.employee_id
  WHERE t.date BETWEEN ? AND ?
  ORDER BY t.date DESC

get_sales_by_item: >
  SELECT t.*, p.title, p.author
  FROM transactions t
  JOIN products p ON p.id = t.product_id
  WHERE p.id = ?

get_sales_by_employee: >
  SELECT t.*, p.title, p.author, e.name AS "employee_name"
  FROM transactions t
  JOIN products p ON p.id = t.product_id
  JOIN employees e ON e.id = t.employee_id
  WHERE e.id = ?

get_sales_by_vendor: >
  SELECT t.*, p.title, p.author, v.name AS "vendor_name"
  FROM transactions t
  JOIN products p ON p.id = t.product_id
  JOIN vendors v ON v.id = t.employee_id
  WHERE v.id = ?

get_bestseller_list: >
  SELECT p.title, p.author, t.product_id,
  COUNT(t.product_id) AS "quantity_sold",
  SUM(t.price) AS "total_sales"
  FROM transactions t
  JOIN products p ON p.id = t.product_id
  WHERE t.price > 0
  AND t.date BETWEEN ? AND ?
  GROUP BY t.product_id
  ORDER BY COUNT(t.product_id) DESC, SUM(t.price) DESC
  LIMIT ?

items_to_replenish: >
  SELECT p.id, p.title,
  v.name AS "vendor_name", p.min_stock, p.in_stock
  FROM products p
  JOIN vendors v on v.id = p.vendor_id
  WHERE p.in_stock < p.min_stock
